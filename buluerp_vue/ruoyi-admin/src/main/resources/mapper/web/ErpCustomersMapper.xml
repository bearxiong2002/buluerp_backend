<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.web.mapper.ErpCustomersMapper">
    
    <resultMap type="ErpCustomers" id="ErpCustomersResult">
        <result property="id"    column="id"    />
        <result property="creatTime"    column="creat_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="name"    column="name"    />
        <result property="contact" column="contact" />
        <result property="email" column="email" />
        <result property="remarks" column="remarks" />
    </resultMap>

    <sql id="selectErpCustomersVo">
        select id, creat_time, update_time, name, contact, email, remarks from erp_customers
    </sql>

    <select id="selectErpCustomersList" parameterType="ErpCustomers" resultMap="ErpCustomersResult">
        <include refid="selectErpCustomersVo"/>
        <where>  
            <if test="creatTime != null "> and DATE(creat_time) = DATE(#{creatTime})</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="contact != null  and contact != ''"> and contact like concat('%', #{contact}, '%')</if>
            <if test="email != null  and email != ''"> and email like concat('%', #{email}, '%')</if>
            <if test="remarks != null  and remarks != ''"> and remarks like concat('%', #{remarks}, '%')</if>
        </where>
    </select>
    
    <select id="selectErpCustomersById" parameterType="Long" resultMap="ErpCustomersResult">
        <include refid="selectErpCustomersVo"/>
        where id = #{id}
    </select>
    <select id="selectErpCustomersListByIds" resultType="com.ruoyi.web.domain.ErpCustomers">
        <include refid="selectErpCustomersVo" />
        where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <insert id="insertErpCustomers" parameterType="ErpCustomers">
        insert into erp_customers
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="creatTime != null">creat_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="name != null">name,</if>
            <if test="contact != null">contact,</if>
            <if test="email != null">email,</if>
            <if test="remarks != null">remarks,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="creatTime != null">#{creatTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="name != null">#{name},</if>
            <if test="contact != null">#{contact},</if>
            <if test="email != null">#{email},</if>
            <if test="remarks != null">#{remarks},</if>
         </trim>
    </insert>

    <update id="updateErpCustomers" parameterType="ErpCustomers">
        update erp_customers
        <trim prefix="SET" suffixOverrides=",">
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="name != null">name = #{name},</if>
            <if test="contact != null">contact = #{contact},</if>
            <if test="email != null">email = #{email},</if>
            <if test="remarks != null">remarks = #{remarks},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteErpCustomersById" parameterType="Long">
        delete from erp_customers where id = #{id}
    </delete>

    <delete id="deleteErpCustomersByIds" parameterType="String">
        delete from erp_customers where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>